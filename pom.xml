<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.extact</groupId>
	<artifactId>msa-rms-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>msa-rms-parent</name>
	<description>Parent POM of Rental Management System By MSA</description>
	<inceptionYear>2023</inceptionYear>
	<organization>
		<name>extact.io Co.,Ltd.</name>
		<url>https://github.com/extact-io/rms-website/</url>
	</organization>
	<url>https://github.com/extact-io/rms-website</url>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/extact-io/msa-rms-parent</url>
		</repository>
		<snapshotRepository>
			<id>github</id>
			<name>GitHub Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/extact-io/msa-rms-parent</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>github</id>
			<name>GitHub Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/extact-io/msa-rms-parent</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<!-- environment settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

		<!-- library versions -->
		<version.helidon>3.2.1</version.helidon>
		<version.lib.security-api>2.0.0</version.lib.security-api>
		<version.lib.jose4j>0.7.12</version.lib.jose4j>
		<version.lib.auth0jwt>4.2.1</version.lib.auth0jwt>
		<version.lib.junit-platform>1.8.2</version.lib.junit-platform>
		<version.lib.assertj>3.23.1</version.lib.assertj>
		<version.lib.archunit>0.23.1</version.lib.archunit>
		<version.lib.commons-lang>3.12.0</version.lib.commons-lang>
		<version.lib.commons-csv>1.9.0</version.lib.commons-csv>
		<version.lib.lombok>1.18.24</version.lib.lombok>
		<version.lib.text-io>3.4.1</version.lib.text-io>
    	<version.plugin.openapi-gen>6.0.0</version.plugin.openapi-gen>

		<!-- maven plugin versions -->
		<version.plugin.maven-compiler>3.10.1</version.plugin.maven-compiler>
		<version.plugin.maven-surefire>3.0.0</version.plugin.maven-surefire>
		<version.plugin.maven-failsafe>3.0.0</version.plugin.maven-failsafe>
		<version.plugin.maven-jar>3.2.2</version.plugin.maven-jar>
		<version.plugin.maven-dependency>3.3.0</version.plugin.maven-dependency>
		<version.plugin.build-helper>3.3.0</version.plugin.build-helper>
		<version.plugin.jandex>1.1.0</version.plugin.jandex>
		<version.plugin.helidon-build-tools>2.3.5</version.plugin.helidon-build-tools>
		<version.plugin.jacoco>0.8.8</version.plugin.jacoco>
		<version.plugin.docker>0.40.2</version.plugin.docker>

		<!-- docker-maven-plugin setting -->
		<image.registry>ghcr.io</image.registry>
		<image.owner>extact-io</image.owner>
		<image.tag>latest</image.tag>
		<image.cleanup>try</image.cleanup>

		<!-- sonarcloud setting -->
		<sonar.projectKey>extact-io_rms</sonar.projectKey>
		<sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
		<sonar.organization>extact-io</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.test.exclusions>**/*Test.java</sonar.test.exclusions>
		<sonar.junit.reportPaths>target/surefire-reports</sonar.junit.reportPaths>
		<sonar.coverage.exclusions>**/io/extact/rms/client/console/**/*</sonar.coverage.exclusions>
		<sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../rms-coverage/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-test-lib</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-platform-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-platform-fw</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-platform-fw-test-lib</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-service-user</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-service-reservation</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.extact</groupId>
				<artifactId>msa-rms-service-item</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.helidon</groupId>
				<artifactId>helidon-dependencies</artifactId>
				<version>${version.helidon}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>jakarta.security.enterprise</groupId>
				<artifactId>jakarta.security.enterprise-api</artifactId>
				<version>${version.lib.security-api}</version>
			</dependency>
			<dependency>
				<groupId>org.bitbucket.b_c</groupId>
				<artifactId>jose4j</artifactId>
				<version>${version.lib.jose4j}</version>
			</dependency>
			<dependency>
				<groupId>com.auth0</groupId>
				<artifactId>java-jwt</artifactId>
				<version>${version.lib.auth0jwt}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-runner</artifactId>
				<version>${version.lib.junit-platform}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${version.lib.assertj}</version>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit-junit5</artifactId>
				<version>${version.lib.archunit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.lib.commons-lang}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>${version.lib.commons-csv}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${version.lib.lombok}</version>
			</dependency>
			<dependency>
				<groupId>org.beryx</groupId>
				<artifactId>text-io</artifactId>
				<version>${version.lib.text-io}</version>
			</dependency>
			<!-- WIP https://github.com/eclipse-ee4j/eclipselink/issues/1393 -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.200</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!--  loggin libraries(by project) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<!-- utility libraries(by project) -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!-- common runtime libraries(by Helidon) -->
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!-- common test libraries -->
		<dependency>
			<groupId>io.helidon.microprofile.tests</groupId>
			<artifactId>helidon-microprofile-tests-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${version.plugin.jacoco}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${version.plugin.docker}</version>
					<configuration>
						<registry>${image.registry}</registry>
						<images>
							<image>
								<name>${image.owner}/${image.name}</name>
								<build>
									<tags>
										<tag>${image.tag}</tag>
									</tags>
									<contextDir>${project.basedir}</contextDir>
									<cleanup>${image.cleanup}</cleanup>
								</build>
							</image>
						</images>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.plugin.maven-compiler}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.plugin.maven-surefire}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit-platform</artifactId>
						<version>${version.plugin.maven-surefire}</version>
					</dependency>
				</dependencies>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${version.plugin.build-helper}</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>build.time</name>
							<pattern>yyyy-MM-dd HH:mm:ss</pattern>
							<locale>ja_JP</locale>
							<timeZone>Asia/Tokyo</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${version.plugin.maven-jar}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>libs</classpathPrefix>
							<mainClass>${mainClass}</mainClass>
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
						<manifestEntries>
							<Application-Name>RentalManagementSystem</Application-Name>
							<Application-Version>${project.version}</Application-Version>
							<Build-Time>${build.time}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jboss.jandex</groupId>
				<artifactId>jandex-maven-plugin</artifactId>
				<version>${version.plugin.jandex}</version>
				<executions>
					<execution>
						<id>make-index</id>
						<goals>
							<goal>jandex</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!--
		eclipseとcliは排他的なプロファイル
		EcliseからTestSuiteでまとめて実行する場合はJunit4のrunnerが必要だが、
		maven-surefire-pluginはクラスパスにJUnit4.x.jarがあると5系の@Test(org.junit.jupiter.api.Test)を
		認識しなくなる
		Junit4のrunnerを除外し、コンパイルエラーも出ないようにTestSuiteのクラスをビルドパスから除外する
		runTestプロファイルを用意しmavenでテスト実行する場合はrunTestプロファイルを指定する
		-->
		<!-- default profile -->
		<profile>
			<id>eclipse</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.junit.platform</groupId>
					<artifactId>junit-platform-runner</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<!-- CommandLineInterface profile -->
		<profile>
			<id>cli</id>
			<properties>
				<mvn.profile.cli>on</mvn.profile.cli>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<testExcludes>
								<!-- exclude JUnit4 TestSuite -->
								<testExclude>**/*TestSuite.java</testExclude>
							</testExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>copy-libs</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${version.plugin.maven-dependency}</version>
						<executions>
							<execution>
								<id>copy-libs</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/libs</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>false</overWriteSnapshots>
									<overWriteIfNewer>true</overWriteIfNewer>
									<overWriteIfNewer>true</overWriteIfNewer>
									<includeScope>runtime</includeScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.helidon.build-tools</groupId>
						<artifactId>helidon-maven-plugin</artifactId>
						<version>${version.plugin.helidon-build-tools}</version>
						<dependencies>
							<dependency>
								<groupId>io.helidon.licensing</groupId>
								<artifactId>helidon-licensing</artifactId>
								<version>${version.helidon}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>third-party-license-report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>